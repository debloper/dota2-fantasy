#!/usr/bin/env node

/**
 * Mohamed Sohail <sohailsameja@gmail.com>
 * Soumya Deb <debloper@gmail.com>
 * 
 * Usage: `./scraper`
 * Requires Node.js v8.x+
 */

const cheerio = require('cheerio')
const request = require('request')

// Page to fetch data from
const url = 'https://liquipedia.net/dota2/The_International/2018'

// Initializing the primary sets of information we're looking for
let teams = []
let roles = ['core', 'core', 'offlane', 'support', 'support']
let rosters = []

// Let's get to it, and fetch the URL
request.get(url, (error, response, body) => {

  // N.B: as this script is only meant to be used by the
  //      repo maintainer, we can ignore error handling.

  // Read the response body, and load it up as DOM
  const $ = cheerio.load(body)

  // Listing the names of the teams by selector
  $('.teamcard center a').each((key, value) => {
    teams.push($(value).attr('title'))
  })

  // `value` here is a whitespace separated player names
  // It's taken from the table of team roster, flattened
  // Contains extra details such as Coach, Standing etc.
  $('.table.table-bordered.list').each((key, value) => {

    // We turn the `value` into an array of player names
    let players = $(value).find('td').text().trim().split('  ')

    // We're only looking for the first 5 items i.e. players
    players.length = 5

    // Here's where we iterate over the list of players
    // Extract their roles by the player index (Pos 1 to 5)
    for (let player in players) {
      let name = players[player]
      let role = roles[player]

      // Then we push the player name and roles as an object
      // Back into the `players` list, at the same key/index
      // Turning the list of strings into a list of objects.
      players[player] = {
        name: name,
        role: role
      }
    }

    // And, after each successful roster parsing
    // Pick the teams & put the details in order
    rosters.push({
      [teams[key]]: players
    })
  })

  // That's it... we have everything we need!
  // Just need to treeshake the roles list a bit
  // And pack the data into a nice little struct
  console.log(JSON.stringify({
    teams: teams,
    roles: [...new Set(roles)],
    rosters: rosters
  }, null, '  '))

  // And, we're done!
})
